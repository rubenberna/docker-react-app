# we tell travis that sudo is required (for docker)
sudo: required
#Travis will install a copy of docker into our running container
services:
  - docker

# series of steps before we attempt to test our app or deploy
before_install:
  - docker build -t rubenberna/react-app -f Dockerfile.dev .

# we add the -- --coverage command just to make sure the npm test suit is exited after it ran, because the default behaviour is to expect an input
script:
  - docker run -e CI=true rubenberna/react-app npm run test -- --coverage

# inform travis how to take our application and deploy it in AWS
deploy:
  provider: elasticbeanstalk
  region: "eu-west-1"
  app: "docker-react"
  env: "DockerReact-env"
  bucket_name: "elasticbeanstalk-eu-west-1-305799247952"
  bucket_path: "docker-react"
  on:
    branch: master
  access_key_id:
    secure: "$AWS_ACCESS_KEY"
  secret_access_key:
    secure: "$AWS_SECRET_KEY"